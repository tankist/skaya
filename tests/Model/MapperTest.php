<?php

/**
 * Test class for Skaya_Model_Mapper_Abstract.
 * Generated by PHPUnit on 2011-05-21 at 20:56:16.
 */
class MapperTest extends PHPUnit_Framework_TestCase {
	/**
	 * @var Skaya_Model_Mapper_Abstract
	 */
	protected $_mapper;

	protected $_rawDataRow = array(
		'id' => 1,
		'first_name' => 'UserTest'
	);

	protected $_rawDataSet = array(
		array(
			'id' => 1,
			'first_name' => 'User Test 1'
		),
		array(
			'id' => 2,
			'first_name' => 'User Test 2'
		),
		array(
			'id' => 3,
			'first_name' => 'User Test 3'
		)
	);

	protected $_modelRow = array(
		'id' => 1,
		'firstName' => 'UserTest'
	);

	protected $_modelSet = array(
		array(
			'id' => 1,
			'firstName' => 'User Test 1'
		),
		array(
			'id' => 2,
			'firstName' => 'User Test 2'
		),
		array(
			'id' => 3,
			'firstName' => 'User Test 3'
		)
	);

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		Skaya_Model_Mapper_MapperBroker::addPath(realpath(TESTS_PATH . '/Model/mappers/_files/MyApp/Mapper/'), 'MyApp_Mapper');
		$broker = Skaya_Model_Mapper_MapperBroker::getInstance();
		$this->_mapper = $broker->getMapper('User', 'Test');
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {
	}

	/**
	 * @todo Implement testMap().
	 */
	public function testMap() {
		$this->assertEquals($this->_modelRow, $this->_mapper->map($this->_rawDataRow));
	}

	/**
	 * @todo Implement testUnmap().
	 */
	public function testUnmap() {
		$this->assertEquals($this->_rawDataRow, $this->_mapper->unmap($this->_modelRow));
	}

	/**
	 * @todo Implement testGetRawArrayFromData().
	 */
	public function testGetRawArrayFromData() {
		$this->assertEquals($this->_rawDataSet, $this->_mapper->getRawArrayFromData($this->_rawDataSet));
		$this->assertEquals($this->_rawDataSet, $this->_mapper->getRawArrayFromData((object)$this->_rawDataSet));
		$this->assertEquals(array(), $this->_mapper->getRawArrayFromData(null));
	}

	/**
	 * @todo Implement testGetMappedArrayFromData().
	 */
	public function testGetMappedArrayFromData() {
		$dataSet = array();
		foreach ($this->_rawDataSet as $row) {
			$dataSet[] = (object)$row;
		}
		$this->assertEquals($this->_modelRow, $this->_mapper->getMappedArrayFromData($this->_rawDataRow));
		$this->assertEquals($this->_modelSet, $this->_mapper->getMappedArrayFromData($this->_rawDataSet));
		$this->assertEquals($this->_modelSet, $this->_mapper->getMappedArrayFromData($dataSet));
	}

	/**
	 * @todo Implement testGetName().
	 */
	public function testGetName() {
		$this->assertEquals('User', $this->_mapper->getName());
	}

	/**
	 * @todo Implement testGetProvider().
	 */
	public function testGetProvider() {
		$this->assertEquals('Test', $this->_mapper->getProvider());
	}
}

?>
